// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { APIResource } from '../../resource';
import * as Core from '../../core';

export class Batch extends APIResource {
  /**
   * Marks one or more messages as archived
   */
  archive(body: BatchArchiveParams, options?: Core.RequestOptions): Core.APIPromise<BatchArchiveResponse> {
    return this._client.post('/v1/messages/batch/archived', options);
  }

  /**
   * Get the contents of multiple messages
   */
  getContent(
    query: BatchGetContentParams,
    options?: Core.RequestOptions,
  ): Core.APIPromise<BatchGetContentResponse> {
    return this._client.get('/v1/messages/batch/content', { query, ...options });
  }

  /**
   * Marks one or more messages as interacted
   */
  markAsInteracted(
    body: BatchMarkAsInteractedParams,
    options?: Core.RequestOptions,
  ): Core.APIPromise<BatchMarkAsInteractedResponse> {
    return this._client.post('/v1/messages/batch/interacted', { body, ...options });
  }

  /**
   * Marks one or more messages as read
   */
  markAsRead(
    body: BatchMarkAsReadParams,
    options?: Core.RequestOptions,
  ): Core.APIPromise<BatchMarkAsReadResponse> {
    return this._client.post('/v1/messages/batch/read', options);
  }

  /**
   * Marks one or more messages as seen
   */
  markAsSeen(
    body: BatchMarkAsSeenParams,
    options?: Core.RequestOptions,
  ): Core.APIPromise<BatchMarkAsSeenResponse> {
    return this._client.post('/v1/messages/batch/seen', options);
  }

  /**
   * Marks one or more messages as unread
   */
  markAsUnread(
    body: BatchMarkAsUnreadParams,
    options?: Core.RequestOptions,
  ): Core.APIPromise<BatchMarkAsUnreadResponse> {
    return this._client.post('/v1/messages/batch/unread', options);
  }

  /**
   * Marks one or more messages as unseen
   */
  markAsUnseen(
    body: BatchMarkAsUnseenParams,
    options?: Core.RequestOptions,
  ): Core.APIPromise<BatchMarkAsUnseenResponse> {
    return this._client.post('/v1/messages/batch/unseen', options);
  }

  /**
   * Marks one or more messages as unarchived
   */
  unarchive(
    body: BatchUnarchiveParams,
    options?: Core.RequestOptions,
  ): Core.APIPromise<BatchUnarchiveResponse> {
    return this._client.post('/v1/messages/batch/unarchived', options);
  }
}

/**
 * The list of messages that were updated
 */
export type BatchArchiveResponse = Array<BatchArchiveResponse.BatchArchiveResponseItem>;

export namespace BatchArchiveResponse {
  /**
   * Represents a single message that was generated by a workflow for a given
   * channel.
   */
  export interface BatchArchiveResponseItem {
    /**
     * The message ID
     */
    id?: string;

    __typename?: string;

    /**
     * A list of actor representations associated with the message (up to 10)
     */
    actors?: Array<string | BatchArchiveResponseItem.ObjectReference>;

    /**
     * Timestamp when message was archived
     */
    archived_at?: string | null;

    /**
     * Channel ID associated with the message
     */
    channel_id?: string;

    /**
     * Timestamp when message was clicked
     */
    clicked_at?: string | null;

    /**
     * Additional message data
     */
    data?: Record<string, unknown> | null;

    /**
     * List of engagement statuses
     */
    engagement_statuses?: Array<'seen' | 'read' | 'interacted' | 'link_clicked' | 'archived'>;

    /**
     * Timestamp of creation
     */
    inserted_at?: string;

    /**
     * Timestamp when message was interacted with
     */
    interacted_at?: string | null;

    /**
     * Timestamp when a link in the message was clicked
     */
    link_clicked_at?: string | null;

    /**
     * Message metadata
     */
    metadata?: Record<string, unknown> | null;

    /**
     * Timestamp when message was read
     */
    read_at?: string | null;

    /**
     * A reference to a recipient, either a user identifier (string) or an object
     * reference (id, collection).
     */
    recipient?: string | BatchArchiveResponseItem.ObjectReference;

    /**
     * Timestamp when message was scheduled for
     */
    scheduled_at?: string | null;

    /**
     * Timestamp when message was seen
     */
    seen_at?: string | null;

    /**
     * Source information
     */
    source?: BatchArchiveResponseItem.Source;

    /**
     * Message delivery status
     */
    status?: 'queued' | 'sent' | 'delivered' | 'delivery_attempted' | 'undelivered' | 'not_sent' | 'bounced';

    /**
     * Tenant ID that the message belongs to
     */
    tenant?: string | null;

    /**
     * Timestamp of last update
     */
    updated_at?: string;

    /**
     * @deprecated Workflow key used to create the message
     */
    workflow?: string | null;
  }

  export namespace BatchArchiveResponseItem {
    /**
     * An object reference to a recipient
     */
    export interface ObjectReference {
      /**
       * An object identifier
       */
      id: string;

      /**
       * The collection the object belongs to
       */
      collection: string;
    }

    /**
     * An object reference to a recipient
     */
    export interface ObjectReference {
      /**
       * An object identifier
       */
      id: string;

      /**
       * The collection the object belongs to
       */
      collection: string;
    }

    /**
     * Source information
     */
    export interface Source {
      __typename: string;

      /**
       * The workflow categories
       */
      categories: Array<string>;

      /**
       * The workflow key
       */
      key: string;

      /**
       * The source version ID
       */
      version_id: string;
    }
  }
}

/**
 * A list of message contents
 */
export type BatchGetContentResponse = Array<BatchGetContentResponse.BatchGetContentResponseItem>;

export namespace BatchGetContentResponse {
  /**
   * The contents of a message
   */
  export interface BatchGetContentResponseItem {
    __typename: string;

    /**
     * The contents of an email message
     */
    data:
      | BatchGetContentResponseItem.MessageEmailContent
      | BatchGetContentResponseItem.MessageSMSContent
      | BatchGetContentResponseItem.MessagePushContent
      | BatchGetContentResponseItem.MessageChatContent
      | BatchGetContentResponseItem.MessageInAppFeedContent;

    inserted_at: string;

    message_id: string;
  }

  export namespace BatchGetContentResponseItem {
    /**
     * The contents of an email message
     */
    export interface MessageEmailContent {
      __typename: string;

      from: string;

      html_body: string;

      subject_line: string;

      text_body: string;

      to: string;

      bcc?: string | null;

      cc?: string | null;

      reply_to?: string | null;
    }

    /**
     * The contents of an SMS message
     */
    export interface MessageSMSContent {
      __typename: string;

      body: string;

      to: string;
    }

    /**
     * The contents of a push message
     */
    export interface MessagePushContent {
      token: string;

      __typename: string;

      body: string;

      title: string;

      data?: Record<string, unknown> | null;
    }

    /**
     * The contents of a chat message
     */
    export interface MessageChatContent {
      __typename: string;

      /**
       * The channel data connection from the recipient to the underlying provider
       */
      connection: Record<string, unknown>;

      template: MessageChatContent.Template;

      metadata?: Record<string, unknown> | null;
    }

    export namespace MessageChatContent {
      export interface Template {
        /**
         * The structured blocks of the message
         */
        blocks?: Array<Template.Block> | null;

        /**
         * The JSON content of the message
         */
        json_content?: Record<string, unknown> | null;

        summary?: string | null;
      }

      export namespace Template {
        /**
         * A block in a chat message
         */
        export interface Block {
          content: string;

          name: string;

          type: 'text' | 'markdown';
        }
      }
    }

    /**
     * The contents of a message in an app feed
     */
    export interface MessageInAppFeedContent {
      __typename: string;

      /**
       * The blocks of the message
       */
      blocks: Array<
        | MessageInAppFeedContent.MessageInAppFeedContentBlock
        | MessageInAppFeedContent.MessageInAppFeedButtonSetBlock
      >;
    }

    export namespace MessageInAppFeedContent {
      /**
       * A content (text or markdown) block in a message in an app feed
       */
      export interface MessageInAppFeedContentBlock {
        content: string;

        name: string;

        rendered: string;

        type: 'markdown' | 'text';
      }

      /**
       * A set of buttons in a message in an app feed
       */
      export interface MessageInAppFeedButtonSetBlock {
        buttons: Array<MessageInAppFeedButtonSetBlock.Button>;

        name: string;

        type: 'button_set';
      }

      export namespace MessageInAppFeedButtonSetBlock {
        /**
         * A button in a set of buttons
         */
        export interface Button {
          action: string;

          label: string;

          name: string;
        }
      }
    }
  }
}

/**
 * The list of messages that were updated
 */
export type BatchMarkAsInteractedResponse =
  Array<BatchMarkAsInteractedResponse.BatchMarkAsInteractedResponseItem>;

export namespace BatchMarkAsInteractedResponse {
  /**
   * Represents a single message that was generated by a workflow for a given
   * channel.
   */
  export interface BatchMarkAsInteractedResponseItem {
    /**
     * The message ID
     */
    id?: string;

    __typename?: string;

    /**
     * A list of actor representations associated with the message (up to 10)
     */
    actors?: Array<string | BatchMarkAsInteractedResponseItem.ObjectReference>;

    /**
     * Timestamp when message was archived
     */
    archived_at?: string | null;

    /**
     * Channel ID associated with the message
     */
    channel_id?: string;

    /**
     * Timestamp when message was clicked
     */
    clicked_at?: string | null;

    /**
     * Additional message data
     */
    data?: Record<string, unknown> | null;

    /**
     * List of engagement statuses
     */
    engagement_statuses?: Array<'seen' | 'read' | 'interacted' | 'link_clicked' | 'archived'>;

    /**
     * Timestamp of creation
     */
    inserted_at?: string;

    /**
     * Timestamp when message was interacted with
     */
    interacted_at?: string | null;

    /**
     * Timestamp when a link in the message was clicked
     */
    link_clicked_at?: string | null;

    /**
     * Message metadata
     */
    metadata?: Record<string, unknown> | null;

    /**
     * Timestamp when message was read
     */
    read_at?: string | null;

    /**
     * A reference to a recipient, either a user identifier (string) or an object
     * reference (id, collection).
     */
    recipient?: string | BatchMarkAsInteractedResponseItem.ObjectReference;

    /**
     * Timestamp when message was scheduled for
     */
    scheduled_at?: string | null;

    /**
     * Timestamp when message was seen
     */
    seen_at?: string | null;

    /**
     * Source information
     */
    source?: BatchMarkAsInteractedResponseItem.Source;

    /**
     * Message delivery status
     */
    status?: 'queued' | 'sent' | 'delivered' | 'delivery_attempted' | 'undelivered' | 'not_sent' | 'bounced';

    /**
     * Tenant ID that the message belongs to
     */
    tenant?: string | null;

    /**
     * Timestamp of last update
     */
    updated_at?: string;

    /**
     * @deprecated Workflow key used to create the message
     */
    workflow?: string | null;
  }

  export namespace BatchMarkAsInteractedResponseItem {
    /**
     * An object reference to a recipient
     */
    export interface ObjectReference {
      /**
       * An object identifier
       */
      id: string;

      /**
       * The collection the object belongs to
       */
      collection: string;
    }

    /**
     * An object reference to a recipient
     */
    export interface ObjectReference {
      /**
       * An object identifier
       */
      id: string;

      /**
       * The collection the object belongs to
       */
      collection: string;
    }

    /**
     * Source information
     */
    export interface Source {
      __typename: string;

      /**
       * The workflow categories
       */
      categories: Array<string>;

      /**
       * The workflow key
       */
      key: string;

      /**
       * The source version ID
       */
      version_id: string;
    }
  }
}

/**
 * The list of messages that were updated
 */
export type BatchMarkAsReadResponse = Array<BatchMarkAsReadResponse.BatchMarkAsReadResponseItem>;

export namespace BatchMarkAsReadResponse {
  /**
   * Represents a single message that was generated by a workflow for a given
   * channel.
   */
  export interface BatchMarkAsReadResponseItem {
    /**
     * The message ID
     */
    id?: string;

    __typename?: string;

    /**
     * A list of actor representations associated with the message (up to 10)
     */
    actors?: Array<string | BatchMarkAsReadResponseItem.ObjectReference>;

    /**
     * Timestamp when message was archived
     */
    archived_at?: string | null;

    /**
     * Channel ID associated with the message
     */
    channel_id?: string;

    /**
     * Timestamp when message was clicked
     */
    clicked_at?: string | null;

    /**
     * Additional message data
     */
    data?: Record<string, unknown> | null;

    /**
     * List of engagement statuses
     */
    engagement_statuses?: Array<'seen' | 'read' | 'interacted' | 'link_clicked' | 'archived'>;

    /**
     * Timestamp of creation
     */
    inserted_at?: string;

    /**
     * Timestamp when message was interacted with
     */
    interacted_at?: string | null;

    /**
     * Timestamp when a link in the message was clicked
     */
    link_clicked_at?: string | null;

    /**
     * Message metadata
     */
    metadata?: Record<string, unknown> | null;

    /**
     * Timestamp when message was read
     */
    read_at?: string | null;

    /**
     * A reference to a recipient, either a user identifier (string) or an object
     * reference (id, collection).
     */
    recipient?: string | BatchMarkAsReadResponseItem.ObjectReference;

    /**
     * Timestamp when message was scheduled for
     */
    scheduled_at?: string | null;

    /**
     * Timestamp when message was seen
     */
    seen_at?: string | null;

    /**
     * Source information
     */
    source?: BatchMarkAsReadResponseItem.Source;

    /**
     * Message delivery status
     */
    status?: 'queued' | 'sent' | 'delivered' | 'delivery_attempted' | 'undelivered' | 'not_sent' | 'bounced';

    /**
     * Tenant ID that the message belongs to
     */
    tenant?: string | null;

    /**
     * Timestamp of last update
     */
    updated_at?: string;

    /**
     * @deprecated Workflow key used to create the message
     */
    workflow?: string | null;
  }

  export namespace BatchMarkAsReadResponseItem {
    /**
     * An object reference to a recipient
     */
    export interface ObjectReference {
      /**
       * An object identifier
       */
      id: string;

      /**
       * The collection the object belongs to
       */
      collection: string;
    }

    /**
     * An object reference to a recipient
     */
    export interface ObjectReference {
      /**
       * An object identifier
       */
      id: string;

      /**
       * The collection the object belongs to
       */
      collection: string;
    }

    /**
     * Source information
     */
    export interface Source {
      __typename: string;

      /**
       * The workflow categories
       */
      categories: Array<string>;

      /**
       * The workflow key
       */
      key: string;

      /**
       * The source version ID
       */
      version_id: string;
    }
  }
}

/**
 * The list of messages that were updated
 */
export type BatchMarkAsSeenResponse = Array<BatchMarkAsSeenResponse.BatchMarkAsSeenResponseItem>;

export namespace BatchMarkAsSeenResponse {
  /**
   * Represents a single message that was generated by a workflow for a given
   * channel.
   */
  export interface BatchMarkAsSeenResponseItem {
    /**
     * The message ID
     */
    id?: string;

    __typename?: string;

    /**
     * A list of actor representations associated with the message (up to 10)
     */
    actors?: Array<string | BatchMarkAsSeenResponseItem.ObjectReference>;

    /**
     * Timestamp when message was archived
     */
    archived_at?: string | null;

    /**
     * Channel ID associated with the message
     */
    channel_id?: string;

    /**
     * Timestamp when message was clicked
     */
    clicked_at?: string | null;

    /**
     * Additional message data
     */
    data?: Record<string, unknown> | null;

    /**
     * List of engagement statuses
     */
    engagement_statuses?: Array<'seen' | 'read' | 'interacted' | 'link_clicked' | 'archived'>;

    /**
     * Timestamp of creation
     */
    inserted_at?: string;

    /**
     * Timestamp when message was interacted with
     */
    interacted_at?: string | null;

    /**
     * Timestamp when a link in the message was clicked
     */
    link_clicked_at?: string | null;

    /**
     * Message metadata
     */
    metadata?: Record<string, unknown> | null;

    /**
     * Timestamp when message was read
     */
    read_at?: string | null;

    /**
     * A reference to a recipient, either a user identifier (string) or an object
     * reference (id, collection).
     */
    recipient?: string | BatchMarkAsSeenResponseItem.ObjectReference;

    /**
     * Timestamp when message was scheduled for
     */
    scheduled_at?: string | null;

    /**
     * Timestamp when message was seen
     */
    seen_at?: string | null;

    /**
     * Source information
     */
    source?: BatchMarkAsSeenResponseItem.Source;

    /**
     * Message delivery status
     */
    status?: 'queued' | 'sent' | 'delivered' | 'delivery_attempted' | 'undelivered' | 'not_sent' | 'bounced';

    /**
     * Tenant ID that the message belongs to
     */
    tenant?: string | null;

    /**
     * Timestamp of last update
     */
    updated_at?: string;

    /**
     * @deprecated Workflow key used to create the message
     */
    workflow?: string | null;
  }

  export namespace BatchMarkAsSeenResponseItem {
    /**
     * An object reference to a recipient
     */
    export interface ObjectReference {
      /**
       * An object identifier
       */
      id: string;

      /**
       * The collection the object belongs to
       */
      collection: string;
    }

    /**
     * An object reference to a recipient
     */
    export interface ObjectReference {
      /**
       * An object identifier
       */
      id: string;

      /**
       * The collection the object belongs to
       */
      collection: string;
    }

    /**
     * Source information
     */
    export interface Source {
      __typename: string;

      /**
       * The workflow categories
       */
      categories: Array<string>;

      /**
       * The workflow key
       */
      key: string;

      /**
       * The source version ID
       */
      version_id: string;
    }
  }
}

/**
 * The list of messages that were updated
 */
export type BatchMarkAsUnreadResponse = Array<BatchMarkAsUnreadResponse.BatchMarkAsUnreadResponseItem>;

export namespace BatchMarkAsUnreadResponse {
  /**
   * Represents a single message that was generated by a workflow for a given
   * channel.
   */
  export interface BatchMarkAsUnreadResponseItem {
    /**
     * The message ID
     */
    id?: string;

    __typename?: string;

    /**
     * A list of actor representations associated with the message (up to 10)
     */
    actors?: Array<string | BatchMarkAsUnreadResponseItem.ObjectReference>;

    /**
     * Timestamp when message was archived
     */
    archived_at?: string | null;

    /**
     * Channel ID associated with the message
     */
    channel_id?: string;

    /**
     * Timestamp when message was clicked
     */
    clicked_at?: string | null;

    /**
     * Additional message data
     */
    data?: Record<string, unknown> | null;

    /**
     * List of engagement statuses
     */
    engagement_statuses?: Array<'seen' | 'read' | 'interacted' | 'link_clicked' | 'archived'>;

    /**
     * Timestamp of creation
     */
    inserted_at?: string;

    /**
     * Timestamp when message was interacted with
     */
    interacted_at?: string | null;

    /**
     * Timestamp when a link in the message was clicked
     */
    link_clicked_at?: string | null;

    /**
     * Message metadata
     */
    metadata?: Record<string, unknown> | null;

    /**
     * Timestamp when message was read
     */
    read_at?: string | null;

    /**
     * A reference to a recipient, either a user identifier (string) or an object
     * reference (id, collection).
     */
    recipient?: string | BatchMarkAsUnreadResponseItem.ObjectReference;

    /**
     * Timestamp when message was scheduled for
     */
    scheduled_at?: string | null;

    /**
     * Timestamp when message was seen
     */
    seen_at?: string | null;

    /**
     * Source information
     */
    source?: BatchMarkAsUnreadResponseItem.Source;

    /**
     * Message delivery status
     */
    status?: 'queued' | 'sent' | 'delivered' | 'delivery_attempted' | 'undelivered' | 'not_sent' | 'bounced';

    /**
     * Tenant ID that the message belongs to
     */
    tenant?: string | null;

    /**
     * Timestamp of last update
     */
    updated_at?: string;

    /**
     * @deprecated Workflow key used to create the message
     */
    workflow?: string | null;
  }

  export namespace BatchMarkAsUnreadResponseItem {
    /**
     * An object reference to a recipient
     */
    export interface ObjectReference {
      /**
       * An object identifier
       */
      id: string;

      /**
       * The collection the object belongs to
       */
      collection: string;
    }

    /**
     * An object reference to a recipient
     */
    export interface ObjectReference {
      /**
       * An object identifier
       */
      id: string;

      /**
       * The collection the object belongs to
       */
      collection: string;
    }

    /**
     * Source information
     */
    export interface Source {
      __typename: string;

      /**
       * The workflow categories
       */
      categories: Array<string>;

      /**
       * The workflow key
       */
      key: string;

      /**
       * The source version ID
       */
      version_id: string;
    }
  }
}

/**
 * The list of messages that were updated
 */
export type BatchMarkAsUnseenResponse = Array<BatchMarkAsUnseenResponse.BatchMarkAsUnseenResponseItem>;

export namespace BatchMarkAsUnseenResponse {
  /**
   * Represents a single message that was generated by a workflow for a given
   * channel.
   */
  export interface BatchMarkAsUnseenResponseItem {
    /**
     * The message ID
     */
    id?: string;

    __typename?: string;

    /**
     * A list of actor representations associated with the message (up to 10)
     */
    actors?: Array<string | BatchMarkAsUnseenResponseItem.ObjectReference>;

    /**
     * Timestamp when message was archived
     */
    archived_at?: string | null;

    /**
     * Channel ID associated with the message
     */
    channel_id?: string;

    /**
     * Timestamp when message was clicked
     */
    clicked_at?: string | null;

    /**
     * Additional message data
     */
    data?: Record<string, unknown> | null;

    /**
     * List of engagement statuses
     */
    engagement_statuses?: Array<'seen' | 'read' | 'interacted' | 'link_clicked' | 'archived'>;

    /**
     * Timestamp of creation
     */
    inserted_at?: string;

    /**
     * Timestamp when message was interacted with
     */
    interacted_at?: string | null;

    /**
     * Timestamp when a link in the message was clicked
     */
    link_clicked_at?: string | null;

    /**
     * Message metadata
     */
    metadata?: Record<string, unknown> | null;

    /**
     * Timestamp when message was read
     */
    read_at?: string | null;

    /**
     * A reference to a recipient, either a user identifier (string) or an object
     * reference (id, collection).
     */
    recipient?: string | BatchMarkAsUnseenResponseItem.ObjectReference;

    /**
     * Timestamp when message was scheduled for
     */
    scheduled_at?: string | null;

    /**
     * Timestamp when message was seen
     */
    seen_at?: string | null;

    /**
     * Source information
     */
    source?: BatchMarkAsUnseenResponseItem.Source;

    /**
     * Message delivery status
     */
    status?: 'queued' | 'sent' | 'delivered' | 'delivery_attempted' | 'undelivered' | 'not_sent' | 'bounced';

    /**
     * Tenant ID that the message belongs to
     */
    tenant?: string | null;

    /**
     * Timestamp of last update
     */
    updated_at?: string;

    /**
     * @deprecated Workflow key used to create the message
     */
    workflow?: string | null;
  }

  export namespace BatchMarkAsUnseenResponseItem {
    /**
     * An object reference to a recipient
     */
    export interface ObjectReference {
      /**
       * An object identifier
       */
      id: string;

      /**
       * The collection the object belongs to
       */
      collection: string;
    }

    /**
     * An object reference to a recipient
     */
    export interface ObjectReference {
      /**
       * An object identifier
       */
      id: string;

      /**
       * The collection the object belongs to
       */
      collection: string;
    }

    /**
     * Source information
     */
    export interface Source {
      __typename: string;

      /**
       * The workflow categories
       */
      categories: Array<string>;

      /**
       * The workflow key
       */
      key: string;

      /**
       * The source version ID
       */
      version_id: string;
    }
  }
}

/**
 * The list of messages that were updated
 */
export type BatchUnarchiveResponse = Array<BatchUnarchiveResponse.BatchUnarchiveResponseItem>;

export namespace BatchUnarchiveResponse {
  /**
   * Represents a single message that was generated by a workflow for a given
   * channel.
   */
  export interface BatchUnarchiveResponseItem {
    /**
     * The message ID
     */
    id?: string;

    __typename?: string;

    /**
     * A list of actor representations associated with the message (up to 10)
     */
    actors?: Array<string | BatchUnarchiveResponseItem.ObjectReference>;

    /**
     * Timestamp when message was archived
     */
    archived_at?: string | null;

    /**
     * Channel ID associated with the message
     */
    channel_id?: string;

    /**
     * Timestamp when message was clicked
     */
    clicked_at?: string | null;

    /**
     * Additional message data
     */
    data?: Record<string, unknown> | null;

    /**
     * List of engagement statuses
     */
    engagement_statuses?: Array<'seen' | 'read' | 'interacted' | 'link_clicked' | 'archived'>;

    /**
     * Timestamp of creation
     */
    inserted_at?: string;

    /**
     * Timestamp when message was interacted with
     */
    interacted_at?: string | null;

    /**
     * Timestamp when a link in the message was clicked
     */
    link_clicked_at?: string | null;

    /**
     * Message metadata
     */
    metadata?: Record<string, unknown> | null;

    /**
     * Timestamp when message was read
     */
    read_at?: string | null;

    /**
     * A reference to a recipient, either a user identifier (string) or an object
     * reference (id, collection).
     */
    recipient?: string | BatchUnarchiveResponseItem.ObjectReference;

    /**
     * Timestamp when message was scheduled for
     */
    scheduled_at?: string | null;

    /**
     * Timestamp when message was seen
     */
    seen_at?: string | null;

    /**
     * Source information
     */
    source?: BatchUnarchiveResponseItem.Source;

    /**
     * Message delivery status
     */
    status?: 'queued' | 'sent' | 'delivered' | 'delivery_attempted' | 'undelivered' | 'not_sent' | 'bounced';

    /**
     * Tenant ID that the message belongs to
     */
    tenant?: string | null;

    /**
     * Timestamp of last update
     */
    updated_at?: string;

    /**
     * @deprecated Workflow key used to create the message
     */
    workflow?: string | null;
  }

  export namespace BatchUnarchiveResponseItem {
    /**
     * An object reference to a recipient
     */
    export interface ObjectReference {
      /**
       * An object identifier
       */
      id: string;

      /**
       * The collection the object belongs to
       */
      collection: string;
    }

    /**
     * An object reference to a recipient
     */
    export interface ObjectReference {
      /**
       * An object identifier
       */
      id: string;

      /**
       * The collection the object belongs to
       */
      collection: string;
    }

    /**
     * Source information
     */
    export interface Source {
      __typename: string;

      /**
       * The workflow categories
       */
      categories: Array<string>;

      /**
       * The workflow key
       */
      key: string;

      /**
       * The source version ID
       */
      version_id: string;
    }
  }
}

export interface BatchArchiveParams {
  /**
   * The message IDs to update
   */
  message_ids: Array<string>;
}

export interface BatchGetContentParams {
  /**
   * The IDs of the messages to fetch contents of
   */
  message_ids: Array<string>;
}

export interface BatchMarkAsInteractedParams {
  /**
   * The message IDs to update
   */
  message_ids: Array<string>;

  /**
   * Metadata about the interaction
   */
  metadata?: Record<string, unknown> | null;
}

export interface BatchMarkAsReadParams {
  /**
   * The message IDs to update
   */
  message_ids: Array<string>;
}

export interface BatchMarkAsSeenParams {
  /**
   * The message IDs to update
   */
  message_ids: Array<string>;
}

export interface BatchMarkAsUnreadParams {
  /**
   * The message IDs to update
   */
  message_ids: Array<string>;
}

export interface BatchMarkAsUnseenParams {
  /**
   * The message IDs to update
   */
  message_ids: Array<string>;
}

export interface BatchUnarchiveParams {
  /**
   * The message IDs to update
   */
  message_ids: Array<string>;
}

export declare namespace Batch {
  export {
    type BatchArchiveResponse as BatchArchiveResponse,
    type BatchGetContentResponse as BatchGetContentResponse,
    type BatchMarkAsInteractedResponse as BatchMarkAsInteractedResponse,
    type BatchMarkAsReadResponse as BatchMarkAsReadResponse,
    type BatchMarkAsSeenResponse as BatchMarkAsSeenResponse,
    type BatchMarkAsUnreadResponse as BatchMarkAsUnreadResponse,
    type BatchMarkAsUnseenResponse as BatchMarkAsUnseenResponse,
    type BatchUnarchiveResponse as BatchUnarchiveResponse,
    type BatchArchiveParams as BatchArchiveParams,
    type BatchGetContentParams as BatchGetContentParams,
    type BatchMarkAsInteractedParams as BatchMarkAsInteractedParams,
    type BatchMarkAsReadParams as BatchMarkAsReadParams,
    type BatchMarkAsSeenParams as BatchMarkAsSeenParams,
    type BatchMarkAsUnreadParams as BatchMarkAsUnreadParams,
    type BatchMarkAsUnseenParams as BatchMarkAsUnseenParams,
    type BatchUnarchiveParams as BatchUnarchiveParams,
  };
}
